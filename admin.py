import os
from flask import Flask, render_template, abort
from sqlalchemy import create_engine, Column, Integer, String, DateTime, Boolean
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base
from datetime import datetime

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (—Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ –≤ –±–æ—Ç–µ) ---
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
DB_PATH = os.path.join(BASE_DIR, 'bot_database.db')

engine = create_engine(f'sqlite:///{DB_PATH}')
Base = declarative_base()
Session = sessionmaker(bind=engine)

# --- –ö–æ–ø–∏—è –º–æ–¥–µ–ª–∏ User –∏–∑ –∫–æ–¥–∞ –±–æ—Ç–∞ ---
class User(Base):
    __tablename__ = 'users'
    
    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, unique=True, nullable=False)
    username = Column(String, nullable=True)
    first_name = Column(String, nullable=True)
    referrer_id = Column(Integer, nullable=True)
    referral_count = Column(Integer, default=0)
    is_subscribed = Column(Boolean, default=False)
    registration_date = Column(DateTime, default=datetime.now)

# --- –°–æ–∑–¥–∞–Ω–∏–µ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
app = Flask(__name__)

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    session = Session()
    try:
        total_users = session.query(User).count()
        all_users = session.query(User).order_by(User.registration_date.desc()).all()
        return render_template('index.html', users=all_users, total_users=total_users)
    finally:
        session.close()

# --- –ù–û–í–´–ô –ú–ê–†–®–†–£–¢ –î–õ–Ø –î–ï–¢–ê–õ–¨–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò ---
@app.route('/user/<int:user_id>')
def user_details(user_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö."""
    session = Session()
    try:
        # –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–≥–æ, –Ω–∞ –∫–æ–≥–æ –∫–ª–∏–∫–Ω—É–ª–∏)
        referrer = session.query(User).filter(User.user_id == user_id).first()
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É 404
        if not referrer:
            abort(404, description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö, –∫–æ–≥–æ –æ–Ω –ø—Ä–∏–≥–ª–∞—Å–∏–ª (–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤ –ø–æ–ª–µ referrer_id —Å—Ç–æ–∏—Ç ID –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        referrals = session.query(User).filter(User.referrer_id == user_id).order_by(User.registration_date.asc()).all()
        
        return render_template('user_detail.html', referrer=referrer, referrals=referrals)
    finally:
        session.close()


if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    print("‚úÖ –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://127.0.0.1:5001")
    app.run(debug=True, port=5001)